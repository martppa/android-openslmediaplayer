/*
 *    Copyright (C) 2014-2015 Haruki Hasegawa
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.martppa'
version = '1.0'

ext {
    projectBasePath = file('.').absolutePath

    // NOTE-1: Set true if using `com.android.tools.build:gradle:2.2.0-alpha5` or later
    // NOTE-2: However, it is so slooooow!!! It does not activates parallel build feature for now...
    // NOTE-3: Built-in external build system not work on Windows! (2.2.0-alpha6)
    useOfficialExternalNativeBuild = !org.gradle.internal.os.OperatingSystem.current().isWindows()

    if (!useOfficialExternalNativeBuild) {
        // required for 'android-setup-custom-ndk-build.gradle'
        ndkProjectCodeRootDir = file('./src/main/jni').absolutePath
    }

    // required for 'android-maven-publish.gradle'
    mavenPublishDestDir = new File(rootDir, "repository").absolutePath
    mavenPublishDataFile = file('./maven-publish-data.properties').absolutePath
    mavenPublishSigningSetting =  file('../signing/library-maven-publish-signing.properties').absolutePath
    useDoclava = true
    docLavaTemplateDir = project.file('doclava-template/template').absolutePath
}

// Common configurations
apply from: '../common/android-set-common-properties.gradle'
if (!useOfficialExternalNativeBuild) {
    apply from: '../common/android-setup-custom-ndk-build.gradle'
}

android {
    /* NOTE:
      Uncomment the following line if you want to enable Native Library debugging.
      (should not use "publishNonDefault true" because it increases build time too long!)
     */
    defaultPublishConfig 'debug'
    publishNonDefault true

    if (useOfficialExternalNativeBuild) {
        externalNativeBuild {
            ndkBuild{
                path "src/main/jni/Android.mk"
            }
        }
    }

    defaultConfig {
        // NOTE: StandardMediaPlayer: API level 9+, OpenSLMediaPlayer: API level 14+
        //       (test app requires API level 10 because of MediaMetadataRetriever class)
        minSdkVersion 9
        targetSdkVersion 21

        def dataProps = new Properties()
        dataProps.load(project.file(project.mavenPublishDataFile).newDataInputStream())

        versionCode dataProps.VERSION_CODE.toInteger()
        versionName dataProps.VERSION_NAME

        if (useOfficialExternalNativeBuild) {
            externalNativeBuild {
                ndkBuild {
                    // NOTE: need to specify targets to build successfully (build tools 2.2.0-alpha5)
                    // targets "OpenSLMediaPlayer", "OpenSLMediaPlayerJNI", "OpenSLMediaPlayerLibLoaderHelper"
                    arguments "NDK_APPLICATION_MK:=src/main/jni/Application.mk", "APP_PLATFORM:=android-14"
                    abiFilters "arm64-v8a"
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            consumerProguardFiles  'proguard-rules.pro'

            if (useOfficialExternalNativeBuild) {
                externalNativeBuild {
                    ndkBuild {
                        arguments "APP_OPTIM:=release"
                        abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
                    }
                }
            }
        }
        debug {
            jniDebuggable true

            minifyEnabled false
            shrinkResources false
            consumerProguardFiles  'proguard-rules.pro'

            if (useOfficialExternalNativeBuild) {
                externalNativeBuild {
                    ndkBuild {
                        arguments "APP_OPTIM:=debug"
                    }
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

// NOTE: this line should be place at end of the file
apply from: '../common/android-maven-publish.gradle'
